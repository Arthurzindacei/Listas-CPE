Uma empresa quer mandar um envelope para obter uma resposta de um cliente e quer saber se é possível colocar esse envelope dentro de outro. Ambos envelopes são
retangulares e um só pode ser colocado dentro do outro se as dimensões forem ambas menores. Dadas as dimensões dos dois envelopes, responda se é possível ou não colocar
o primeiro dentro do segundo.

Entrada
A entrada consiste de uma série de testes. A primeira linha contém um único inteiro indicando o número n (1 ≤ n ≤ 20) de casos de testes. A seguir vêm n linhas contendo,
cada uma, um caso de teste. Cada caso de teste se compõe de 4 inteiros: os dois primeiros são as dimensões do envelope que deve ir dentro e os dois últimos, a dimensão
do envelope principal.

Saída
Para cada caso de teste imprima, em uma linha:

. 'S' se for possível colocar o primeiro envelope dentro do segundo, ou

. 'N', caso contrário.

Exemplo de Entrada	
3

10 10 10 20

19 2 3 20

2 20 5 15

Exemplo de Saída
N

S

N




#include <iostream>
#include <string>
#include <unistd.h>
using namespace std;
    
//Declaração das variáveis
string sLinha;

int iCont   = 0;
int iNum    = 0;

//Função para converter caracter minúsculo em maíusculo de uma string
void CarregarVetor(string &pLinha, int pTam, int *pVet){//recebe o endereço de memória da variável
   
    int j = 0; int i; string sNum = "";

    //vou procurar pelos grupos de 3
    for (i = 0; i < pTam; i++){

        if (pLinha.substr(i, 1) == " "){
           pVet[j] = stoi(sNum);//converte para inteiro
           sNum = ""; j++; 
        }
           
        sNum +=  pLinha.substr(i, 1);//separando as dimensões
    }
    
    if (sNum != ""){pVet[j] = stoi(sNum);} 

}

int main(){

    //criticando a entrada do número de testes
    while(true){
        //limpando a tela 
        system("clear");
        
        cout << "\nInforme um número de Teste entre 1 e 20 = ";
        cin >> iNum;
        cin.ignore();
        
        if (iNum > 0 && iNum < 21){//criticando o intervalo
           break;//tudo ok, vamos em frente
        }
        
        cout << "\nNúmero do Teste fora do intervalo (1 e 20)\n";
        sleep(2);//espera 2 segundos até a apagar a mensagem
    }

    int *iVet;        //criando ponteiro 
    iVet = new int[4];//reservando memória - instanciando
    
    while(iNum > iCont){

        sLinha = "";
        cout << "\nInforme as Dimensões dos Envelopes no Formato 99 99 99 99 = \n"; 
        getline(cin, sLinha);

        int iTam = sLinha.length();

        //vou carregar um vetor
        CarregarVetor(sLinha, iTam, iVet);

/*
        //imprime dados a partir do iVet
        for (int i = 0; i < 4; i++){
            i == 0 ? (cout <<   "\n" << iVet[i]) : (count <<   "\t" << iVet[i]);
        }
*/        
        //testando as dimensões dos envelopes
        if (iVet[0] < iVet[3] && iVet[1] < iVet[2]){
            cout << "\nS" << "\n";
    
        }else{
            cout << "\nN";}
        
        iCont++;//incrementando o contador de testes
        
    }

    return 0;//Fim da aplicação tchau tchau
}
